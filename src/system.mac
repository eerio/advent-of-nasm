; generic
%define NULL 0

; syscalls
%define SYS_READ 0
%define SYS_WRITE 1
%define SYS_OPEN 2
%define SYS_MMAP 9
%define SYS_MUNMAP 11
%define SYS_EXIT 60

; mmap
%define PROT_NONE 0
%define PROT_READ 1
%define PROT_WRITE 2
%define PROT_EXEC 4
%define MAP_SHARED 1
%define MAP_SHARED_VALIDATE 3
%define MAP_PRIVATE 2

; I/O
%define STDIN_FILENO 0
%define STDOUT_FILENO 1
%define STDERR_FILENO 2
%define O_RDONLY 0
%define O_WRONLY 1
%define O_RDWR 2
%define O_CREAT 4

; exit codes
%define EXIT_OK 0

; auxiliary macros
%macro exit 1
	mov rax, SYS_EXIT
	mov rdi, %1
	syscall
%endmacro


%macro write 2+
%ifstr %2
	jmp  %%endstr
%%str:	db %2
%%endstr:
	mov rsi, %%str
%else
	mov rsi, %2
%endif
	mov rax, SYS_WRITE
	mov rdi, %1
	mov rdx, %%endstr-%%str
	syscall
%endmacro


%macro puts 1+
%ifstr %1
	write STDOUT_FILENO, %1, 10
%else
	write STDOUT_FILENO, %1
	write STDOUT_FILENO, 10
%endif
%endmacro


%macro open 2
%ifstr %1
	jmp %%endstr
%%str:	db %1
%%endstr:
	mov rdi, %%str
%else
	mov rdi, %1
%endif
	mov rax, SYS_OPEN
	mov rsi, %2
	syscall
%endmacro


%macro mmap 6
	mov rax, SYS_MMAP
	mov rdi, %1
	mov rsi, %2
	mov rdx, %3
	mov r10, %4
	mov r8, %5
	mov r9, %6
	syscall
%endmacro


%macro munmap 2
	mov rax, SYS_MUNMAP
	mov rdi, %1
	mov rsi, %2
	syscall
%endmacro

